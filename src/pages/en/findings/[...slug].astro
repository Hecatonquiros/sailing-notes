---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrev from "@components/BackToPrev.astro";
import { translations } from "@lib/i18n";

export async function getStaticPaths() {
  const findings = (await getCollection("findings"))
    .filter(finding => !finding.data.draft && finding.data.lang === 'en')
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return findings.map((finding) => ({
    params: { slug: finding.slug },
    props: finding,
  }));
}
type Props = CollectionEntry<"findings">;

const finding = Astro.props;
const { Content } = await finding.render();
const t = translations.en;
---

<PageLayout title={finding.data.title} description={finding.data.description} relatedSlug={finding.data.relatedFinding}>
  <Container>
    <div class="animate">
      <BackToPrev href="/findings">
        {t.home.backToFindings}
      </BackToPrev>
    </div>
    <div class="space-y-1 my-10">
      <div class="animate flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={finding.data.date} />
        </div>
        &bull;
        <div class="font-base text-sm">
          {readingTime(finding.body, 'en')}
        </div>
      </div>
      <div class="animate text-4xl font-bold text-black dark:text-white">
        {finding.data.title}
      </div>
    </div>
    <article class="animate">
      <Content />
    </article>
  </Container>
</PageLayout>
